"""Remove UserImage and model_training_images tables

Revision ID: 1dd20e353d0f
Revises: 8968447c8ea1
Create Date: 2025-02-04 15:17:12.832134

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1dd20e353d0f'
down_revision = '8968447c8ea1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('model_training_images')
    with op.batch_alter_table('user_images', schema=None) as batch_op:
        batch_op.drop_index('idx_user_images_user_id')

    op.drop_table('user_images')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_images',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_images_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('storage_location_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('original_filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mime_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('width', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('height', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['storage_location_id'], ['storage_locations.id'], name='user_images_storage_location_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_images_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_images_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('user_images', schema=None) as batch_op:
        batch_op.create_index('idx_user_images_user_id', ['user_id'], unique=False)

    op.create_table('model_training_images',
    sa.Column('model_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['image_id'], ['user_images.id'], name='model_training_images_image_id_fkey'),
    sa.ForeignKeyConstraint(['model_id'], ['trained_models.id'], name='model_training_images_model_id_fkey'),
    sa.PrimaryKeyConstraint('model_id', 'image_id', name='model_training_images_pkey')
    )
    # ### end Alembic commands ###
